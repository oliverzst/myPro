<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.actec.bsms.repository.dao.InspectDao">

	<resultMap id="InspectResult" type="com.actec.bsms.entity.Inspect">
		<id property="id" column="id" />
		<result property="facilityDomain" column="facility_domain" />
		<result property="inspectTime" column="inspect_time" />
		<result property="inspectBy" column="inspect_by" />
		<result property="inspectType" column="inspect_type" />
		<result property="state" column="state" />
		<result property="inspectRecords" column="inspect_records" />
		<result property="troubleShootInfo" column="trouble_shoot_info" typeHandler="com.actec.bsms.utils.ConvertBlobTypeHandler"/>
		<result property="endTime" column="end_time" />
        <result property="taskIds" column="task_ids" />
        <result property="inspectDeviceTypeId" column="inspect_device_type_id" />
		<collection property="facility" ofType="com.actec.bsms.entity.Facility">
            <id property="id" column="facility.id" />
			<result property="name" column="facility.name" />
		</collection>
		<collection property="inspectUser" ofType="com.actec.bsms.entity.User">
            <id property="id" column="inspectUser.id" />
			<result property="name" column="inspectUser.name" />
		</collection>
		<collection property="inspectDeviceType" ofType="com.actec.bsms.entity.InspectDeviceType">
			<id property="id" column="inspectDeviceType.id" />
			<result property="name" column="inspectDeviceType.name" />
		</collection>
	</resultMap>

	<resultMap id="InspectResultSimple" type="com.actec.bsms.entity.Inspect">
		<id property="id" column="id" />
		<result property="facilityDomain" column="facility_domain" />
		<result property="inspectBy" column="inspect_by" />
		<result property="inspectTime" column="inspect_time" />
		<result property="inspectType" column="inspect_type" />
		<result property="state" column="state" />
		<result property="endTime" column="end_time" />
        <result property="taskIds" column="task_ids" />
		<result property="inspectDeviceTypeId" column="inspect_device_type_id" />
		<collection property="facility" ofType="com.actec.bsms.entity.Facility">
			<id property="id" column="facility.id" />
			<result property="name" column="facility.name" />
		</collection>
		<collection property="inspectUser" ofType="com.actec.bsms.entity.User">
			<id property="id" column="inspectUser.id" />
			<result property="name" column="inspectUser.name" />
		</collection>
		<collection property="inspectDeviceType" ofType="com.actec.bsms.entity.InspectDeviceType">
			<id property="id" column="inspectDeviceType.id" />
			<result property="name" column="inspectDeviceType.name" />
		</collection>
	</resultMap>

    <sql id="inspectColumns">
    	a.id,
		a.facility_domain,
		a.inspect_time,
		a.inspect_by,
		a.inspect_type,
		a.state,
		a.inspect_records,
		a.trouble_shoot_info,
		a.end_time,
		a.task_ids,
		a.inspect_device_type_id,
		fac.id AS "facility.id",
        fac.name AS "facility.name",
        iu.id AS "inspectUser.id",
        iu.name AS "inspectUser.name",
        idt.id AS "inspectDeviceType.id",
        idt.name AS "inspectDeviceType.name"
    </sql>

    <sql id="inspectJoins">
		LEFT JOIN facility fac ON fac.domain = a.facility_domain
        LEFT JOIN sys_user iu ON iu.id = a.inspect_by
        LEFT JOIN inspect_device_type idt ON idt.id = a.inspect_device_type_id
    </sql>

	<select id="get" resultMap="InspectResult">
		SELECT
			<include refid="inspectColumns"/>
		FROM inspect a
			<include refid="inspectJoins"/>
		WHERE a.id = #{id}
	</select>

    <select id="findById" resultMap="InspectResultSimple">
        SELECT
        <include refid="inspectColumns"/>
        FROM inspect a
        <include refid="inspectJoins"/>
        WHERE a.id = #{id}
    </select>

	<select id="findByIdByTableName" resultMap="InspectResult">
		SELECT
		<include refid="inspectColumns"/>
		FROM ${tableName} a
		<include refid="inspectJoins"/>
		WHERE a.id = #{id} and a.end_time is not null
	</select>

	<select id="findAllList" resultMap="InspectResultSimple">
		SELECT
			<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
	</select>

	<select id="findHistoryByTableName" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM ${tableName} a
		<include refid="inspectJoins"/>
		WHERE a.end_time is not null
	</select>

	<select id="findByFacilityDomain" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.facility_domain = #{facilityDomain} AND a.inspect_type = #{type} AND a.end_time is null
	</select>

	<select id="findByFacilityAndUser" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.facility_domain = #{facilityDomain} AND a.inspect_by = #{userId} AND a.inspect_type = #{type} AND a.end_time is null
	</select>

	<select id="findByFacilityAndUserAndInspectDeviceType" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.facility_domain = #{facilityDomain} AND a.inspect_by = #{userId} AND a.inspect_device_type_id = #{inspectDeviceTpyeId} AND a.inspect_type = #{type} AND a.end_time is null
	</select>

	<select id="findByInspectBy" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.end_time is null
		<if test="userId != 0">
			AND a.inspect_by = #{userId}
		</if>
		ORDER BY a.inspect_time desc
	</select>

	<select id="findByInspectByEnd" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.end_time is not null
		<if test="userId != 0">
			AND a.inspect_by = #{userId}
		</if>
		ORDER BY a.end_time desc
	</select>

	<select id="findByInspectByMonth" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect_#{year}_#{month} a
		<include refid="inspectJoins"/>
		WHERE a.end_time is not null
		<if test="userId != 0">
			AND a.inspect_by = #{userId}
		</if>
		ORDER BY a.end_time desc
	</select>

	<select id="findHistoryInspectByFacilityDomainByMonth" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect_#{year}_#{month} a
		<include refid="inspectJoins"/>
		WHERE a.end_time is not null
		<if test="facilityDomain != null and facilityDomain != ''">
			AND a.facility_domain = #{facilityDomain}
		</if>
		ORDER BY a.end_time desc
	</select>

	<select id="findHistoryInspectByFacilityDomain" resultMap="InspectResultSimple">
		SELECT
		<include refid="inspectColumns"/>
		FROM inspect a
		<include refid="inspectJoins"/>
		WHERE a.end_time is not null
		<if test="facilityDomain != null and facilityDomain != ''">
			AND a.facility_domain = #{facilityDomain}
		</if>
		ORDER BY a.end_time desc
	</select>

	<insert id="insert">
		INSERT INTO inspect(
			id,
			facility_domain,
			inspect_time,
			inspect_by,
			inspect_type,
			state,
			inspect_records,
			trouble_shoot_info,
			end_time,
			task_ids,
			inspect_device_type_id
		) VALUES (
			#{id},
			#{facilityDomain},
			#{inspectTime},
			#{inspectBy},
			#{inspectType},
			#{state},
			#{inspectRecords},
			#{troubleShootInfo},
			#{endTime},
			#{taskIds},
			#{inspectDeviceTypeId}
		)
	</insert>

	<update id="update">
		UPDATE inspect SET
			inspect_time = #{inspectTime},
			inspect_type = #{inspectType},
			state = #{state},
			inspect_records = #{inspectRecords},
			trouble_shoot_info = #{troubleShootInfo},
			end_time = #{endTime},
			task_ids = #{taskIds},
			inspect_device_type_id = #{inspectDeviceTypeId}
		WHERE id = #{id}
	</update>

	<delete id="delete">
		DELETE FROM inspect WHERE id = #{id}
	</delete>

	<update id="createTable">
		<![CDATA[
		CREATE TABLE IF NOT EXISTS inspect (
		  id MEDIUMINT UNSIGNED AUTO_INCREMENT COMMENT '编号',
		  facility_domain varchar(64) NOT NULL COMMENT '巡检设备',
		  inspect_time datetime DEFAULT NULL COMMENT '巡检时间',
		  inspect_by SMALLINT UNSIGNED COMMENT '巡检人',
		  inspect_type TINYINT UNSIGNED COMMENT '巡检类型',
		  state TINYINT UNSIGNED COMMENT '巡检状态',
		  inspect_records varchar(10000) DEFAULT NULL COMMENT '巡检记录',
		  trouble_shoot_info mediumblob COMMENT '故障记录',
		  end_time datetime DEFAULT NULL COMMENT '巡检完成时间',
		  task_ids varchar(1024) DEFAULT NULL COMMENT '巡检任务',
		  inspect_device_type_id SMALLINT UNSIGNED COMMENT '巡检设备类型id',
		  PRIMARY KEY (`id`)
		) COMMENT='巡检表';
		]]>
	</update>

</mapper>